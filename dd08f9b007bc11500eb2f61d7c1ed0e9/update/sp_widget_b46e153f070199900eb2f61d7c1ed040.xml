<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[function ($scope, $location, $http, spUtil, $timeout) {

	var c = this;
	var $ = go.GraphObject.make;

	c.user = {
		displayValue: $scope.data.name,
		value: $scope.data.start,
		name: 'user'
	};

	// base user changed, reload page
	$scope.$on("field.change", function(evt, parms) {
		if (parms.field.name != 'user')
			return;

		var s = $location.search();
		s.p = parms.newValue;
		$location.search(s);
	});


	$timeout(function() {
		c.diagram = $(go.Diagram, 'org_chart', {
			mouseWheelBehavior: go.ToolManager.WheelZoom,
			layout: $(go.TreeLayout, evalGoCode(c.options.tree_layout)) // use a TreeLayout to position all of the nodes
		});

		makeTemplate(c.diagram);

		// create the Model with data for the tree, and assign to the Diagram
		c.diagram.model = $(go.TreeModel, {
			nodeParentKeyProperty: "parent", // this property refers to the parent node data
			nodeDataArray: $scope.data.nodes
		});

	});

	c.zoomIn = function() {
		c.diagram.commandHandler.increaseZoom()
	}

	c.zoomOut = function() {
		c.diagram.commandHandler.decreaseZoom()
	}

	// When a Node is double clicked, open the user record for the person in a new window
	function nodeClick(event, node) {
		window.open(spUtil.format($scope.options.url, {sys_id: node.data.key, page: c.options.page}));
	}

	function makeTemplate(diagram) {
		diagram.nodeTemplate =  $(go.Node, "Auto", angular.extend({click: nodeClick}, evalGoCode(c.options.node_layout)),
			$(go.Shape, "Rectangle", new go.Binding("fill", "color")), // the outer shape for the node, surrounding the Table
			$(go.Panel, "Horizontal",$(go.Picture, evalGoCode(c.options.picture_layout), new go.Binding("source", "photo")), panel()));
		diagram.linkTemplate = $(go.Link, go.Link.Orthogonal,{ selectable: false }, $(go.Shape, evalGoCode(c.options.line) )); // the default black link shape
	}

	function evalGoCode(item) {
		for (var x in item) {
			var re = /{([^}]+)?}/g, match;
			while (match = new RegExp(re).exec(item[x])) {
				item[x] = eval(match[1])
			}
		}

		return item;
	}

	function panel() {
		var opts = [
			go.Panel, "Table", evalGoCode(c.options.table_layout),
			$(go.RowColumnDefinition, evalGoCode(c.options.row_layout))];
		var item;
		for (var fieldName in c.options.card_fields) {
			item = c.options.card_fields[fieldName];
			evalGoCode(item);
			opts.push($(go.TextBlock, item, new go.Binding("text", fieldName)))
		}
		return $.apply(null, opts);
	}

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.org-chart {
	height: 400px;
  margin: 10px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Capability Chart</name>
        <option_schema>[{"hint":"Card Fields Config","name":"card_fields","section":"Data","label":"Card Fields","type":"string"},{"hint":"User Background color","name":"user_background_color","section":"Presentation","label":"User Background Color","type":"string"},{"hint":"Node Background Color","name":"node_background_color","section":"Presentation","label":"Node Background Color","type":"string"},{"hint":"URL to open on click","name":"url","section":"Behavior","label":"URL","type":"string"},{"name":"table_layout","section":"Presentation","label":"Table Layout","type":"string"},{"name":"row_layout","section":"Presentation","label":"Row Layout","type":"string"},{"name":"line","section":"Presentation","label":"Line","type":"string"},{"name":"tree_layout","section":"Presentation","label":"Tree Layout","type":"string"},{"name":"picture_layout","section":"Presentation","label":"Picture Layout","type":"string"},{"name":"table_layout","section":"Presentation","label":"Table Layout","type":"string"},{"name":"page","section":"Behavior","label":"Page","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {		
	//var start = $sp.getParameter('p') || gs.getUserID();
	var start = $sp.getParameter('p') || 'e31711779757cd507fd7f97e6253af80'; // ServiceNow

	// Default Values
	options.table_layout = options.table_layout || {margin: 4, maxSize: '{new go.Size(180, NaN)}'}
	options.row_layout = options.row_layout || {column: 0, stretch: '{go.GraphObject.Horizontal}', alignment: '{go.Spot.Left}'};
	options.node_layout = options.node_layout || {cursor: "pointer", isShadowed: true}
	options.user_background_color = options.user_background_color || '#fa255e';
	options.node_background_color = options.node_background_color || '#f8e5e5';
	options.url = options.url || '?id={page}&sys_id={sys_id}&table=cmdb_ci_business_capability';
	options.line = options.line || {stroke: '#222'};
	options.page = options.page || 'form';
	options.card_fields = options.card_fields || {
			name: {row: 0, column: 0, columnSpan: 2, font: 'bold 9pt sans-serif', alignment: '{go.Spot.Top}',  maxSize: '{new go.Size(160, NaN)}'},
			title: {row: 1, column: 0, columnSpan: 2, font: '8pt sans-serif'},
			x_292088_capabil_0_cap_lead: {row: 2, column: 0, columnSpan: 2, font: '8pt sans-serif'},
			x_292088_capabil_0_sub_leads: {row: 3, column: 0, columnSpan: 2, font: '8pt sans-serif'},
			email: {row: 4, column: 0, columnSpan: 2, font: '8pt sans-serif'},
			location: {row: 5, column: 0, columnSpan: 2, font: '8pt sans-serif'}
	};
	options.tree_layout = options.tree_layout || {
				treeStyle: '{go.TreeLayout.StyleLastParents}',
				angle: 90,
				layerSpacing: 80,
				alternateAngle: 0,
				alternateAlignment: '{go.TreeLayout.AlignmentStart}',
				alternateNodeIndent: 20,
				alternateNodeIndentPastParent: 1,
				alternateNodeSpacing: 20,
				alternateLayerSpacing: 40,
				alternateLayerSpacingParentOverlap: 1,
				alternatePortSpot: '{new go.Spot(0, 0.999, 20, 0)}',
				alternateChildPortSpot: '{go.Spot.Left}'
			};

	options.picture_layout = options.picture_layout || {
		name: 'Picture',
		desiredSize: '{new go.Size(55, 65)}',
		margin: '{new go.Margin(2, 2, 2, 6)}',
		imageStretch: '{go.GraphObject.UniformToFill}'
	};

	createNodes(start);
	
	function createNodes() {
		var gr = new GlideRecord('cmdb_ci_business_capability');
		gr.get(start);
		data.start = start;
		data.name = gr.getDisplayValue('name');
		var n = data.nodes = [];
		// anchor user
		//var u = getUser(gr);
		var u = getCap(gr);
		
		u.color = options.user_background_color;
		n.push(u);
		
		if (u.parent && gr.parent.active) {
			gr.get(u.parent);
			var m = getCap(gr);
			n.push(m);
			getSubs(u.parent, n, start);
		}

		getSubs(u.sys_id, n);

		function getSubs(parent, n, start) {
			var gr = new GlideRecord('cmdb_ci_business_capability');
			gr.addActiveQuery();
			gr.addQuery('parent', parent);
			gr.query();
			while (gr.next()) {
				var u = getCap(gr);

				if (start && u.sys_id == start)
					continue;

				n.push(u);
			}
		}

		function getCap(gr) {
			var u = {};
			$sp.getRecordDisplayValues(u, gr, 'sys_id,' + Object.keys(options.card_fields));
			$sp.getRecordValues(u, gr, 'parent');
			$sp.getRecordDisplayValues(u, gr, 'x_292088_capabil_0_cap_lead');
			$sp.getRecordDisplayValues(u, gr, 'x_292088_capabil_0_sub_leads');
			u.key = u.sys_id;

			
			u.color = options.node_background_color;
			return u;
		}
		
		function getUser(gr) {
			var u = {};
			$sp.getRecordDisplayValues(u, gr, 'sys_id,' + Object.keys(options.card_fields));
			$sp.getRecordValues(u, gr, 'manager');
			u.key = u.sys_id;

			var profile = new GlideRecord("live_profile");
			profile.addQuery("document", u.sys_id);
			profile.query();

			while (profile.next()){
				var photo = profile.getDisplayValue("photo");
				if (photo.length > 0) {
					u.photo = photo + '?t=small';
				}
			}

			u.color = options.node_background_color;
			return u;
		}
	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>CPHAN20</sys_created_by>
        <sys_created_on>2022-08-08 07:26:37</sys_created_on>
        <sys_id>b46e153f070199900eb2f61d7c1ed040</sys_id>
        <sys_mod_count>31</sys_mod_count>
        <sys_name>Capability Chart</sys_name>
        <sys_package display_value="Capability" source="x_292088_capabil_0">dd08f9b007bc11500eb2f61d7c1ed0e9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Capability">dd08f9b007bc11500eb2f61d7c1ed0e9</sys_scope>
        <sys_update_name>sp_widget_b46e153f070199900eb2f61d7c1ed040</sys_update_name>
        <sys_updated_by>CPHAN20</sys_updated_by>
        <sys_updated_on>2022-08-09 03:21:58</sys_updated_on>
        <template><![CDATA[<div>
  <h1>
    ${ServiceNow Capabilities}
  </h1>
    <sn-record-picker field="c.user" table="'cmdb_ci_business_capability'" display-field="'name'" value-field="'sys_id'" 
                    display-fields="'name,x_292088_capabil_0_cap_lead'" search-fields="'name'" page-size="100" >
    </sn-record-picker>
    <div id="org_chart" class="org-chart"></div>
    <button name="zoomin" ng-click="c.zoomIn()" class="btn btn-primary" aria-label="${Zoom in}" data-toggle="tooltip" title="${Zoom in}"><span><i class="fa fa-search-plus"></i></span></button>
    <button name="zoomout" ng-click="c.zoomOut()" class="btn btn-primary" aria-label="${Zoom out}" data-toggle="tooltip" title="${Zoom out}"><span><i class="fa fa-search-minus"></i></span></button>
</div>
]]></template>
    </sp_widget>
</record_update>
